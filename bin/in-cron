#!/bin/sh
usage() {
	echo "Run a command as a cron job."
	echo
	echo "usage: `readlink -f $0` [-l log_file] [-p additional_path]"
	echo "\t[-a] [-x] command [args [...]]"
	echo
	echo "Use -l to specify a log file."
	echo "Use -p to specify additional directories for PATH."
	echo "Use -a to append to the log instead of overwriting it."
	echo "Use -x to use the extended log format."
	echo "Use -h to print this help."
	echo
	echo '"command" must be an executable argument.  Specify a command path'
	echo 'either absolute, relative to $HOME, or in $PATH.  If specifying an'
	echo "absolute or relative command, it is executed in its directory so"
	echo "command arguments that are paths must be either absolute or relative"
	echo "to the command.  If the command's path is implicit (i.e., the command"
	echo 'is in $PATH), it is executed in $HOME so command arguments that are'
	echo 'paths must be either absolute or relative to $HOME.'
	echo
	echo "Additional PATH directories are prepended to those cron provides."
	echo "Specify multiple additional directories by either specifying"
	echo "multiple -p options or delimiting them with ':' in a single -p"
	echo 'option.  Note that $HOME/bin is automatically prepended.'
	exit 2
}

# Configure the environment.
[ -d $HOME/bin ] && PATH="$HOME/bin:$PATH"
[ -d $HOME/lib ] && PYTHONPATH=$HOME/lib

# Parse and validate the command line arguments.
WantsExtended=false
while getopts l:p:axh o
do
	case $o in
		l)    LogFile=$OPTARG;;
		p)    PATH="$OPTARG:$PATH";;
		a)    AppendArg="-a";;
		x)    WantsExtended=true;;
		h|\?) usage;;
	esac
done
shift `expr $OPTIND - 1`
[ $# -ge 1 ] || usage
[ -z "$LogFile" ] || check -d `dirname $LogFile` || exit 1
Command=$1
if echo "$Command" | grep -Fq /; then
	check -x $Command || exit 1
else
	which $Command > /dev/null || exit 1
fi
shift 1

# Switch to the appropriate directory.
if echo "$Command" | grep -Fq /; then
	# The command's path is absolute or relative.
	cd `dirname $Command`
	Command=./`basename $Command`
else
	# The command's path is implicit.
	cd $HOME
fi

# Execute the command.
export PATH
export PYTHONPATH
if $WantsExtended; then
	$Command "$@" 2>&1 | while read L; do
		echo $L | sed "s/^/`date '+%Y-%m-%d %H:%M:%S'` /"
	done
else
	$Command "$@" 2>&1
fi | { [ -n "$LogFile" ] && tee $AppendArg $LogFile || cat; }
